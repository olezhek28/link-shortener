version: '3.8'

volumes:
  postgres_volume:
  prometheus_data:
  grafana_data:

services:
  db:
    image: postgres:14-alpine3.15
    restart: unless-stopped
    environment:
      - "POSTGRES_PASSWORD=sample_pass"
    ports:
      - "5444:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./configs/postgres/docker-entrypoint-initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql

  postgresql_exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: ${PG_DSN}

  pgbouncer:
    image: bitnami/pgbouncer:1.17.0
    restart: unless-stopped
    environment:
      - "POSTGRESQL_DATABASE=${PG_DATABASE}"
      - "POSTGRESQL_PASSWORD=${PG_PASSWORD}"
      - "POSTGRESQL_USERNAME=${PG_USER}"
      - "POSTGRESQL_HOST=db"
      - "PGBOUNCER_POOL_MODE=transaction"
      - "PGBOUNCER_IGNORE_STARTUP_PARAMETERS=extra_float_digits"
      - "PGBOUNCER_DATABASE=${PG_DATABASE}"
    ports:
      - "6432:6432"
    depends_on:
      - db

  goose:
    build: ./migrations/
    restart: on-failure
    environment:
      DB_HOST: db
    ports:
      - "5446:5432"
    depends_on:
      - pgbouncer

  prometheus:
    image: prom/prometheus:v2.39.1
    restart: unless-stopped
    volumes:
      - "./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./configs/prometheus/targets:/etc/prometheus/targets"
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=70d'
      - '--log.level=debug'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://prometheus.olezhek.ru'

  grafana:
    image: grafana/grafana:9.2.1-ubuntu
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana

  nginx:
    image: nginx:1.23.2
    restart: unless-stopped
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./configs/nginx/conf.d:/etc/nginx/conf.d
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - grafana
      - prometheus

  alertmanager:
    image: prom/alertmanager:v0.24.0
    restart: unless-stopped
    volumes:
      - ./configs/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./configs/alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--log.level=debug'
      - '--web.route-prefix=/alertmanager'

  redis:
    image: redis:7.0.0-alpine3.15
    ports:
      - "6379:6379"

  redis_exporter:
    image: oliver006/redis_exporter:v1.37.0
    command: "--redis.addr=redis://redis:6379 --web.listen-address=0.0.0.0:9121"
    restart: unless-stopped

  alertmanager-bot:
    image: serg3091/prometheus_bot:v0.0.1
    volumes:
      - ./configs/alertmanager-bot/config.yaml:/config.yaml
      - ./configs/alertmanager-bot/template.tmpl:/template.tmpl
    restart: unless-stopped

