version: '3.8'

volumes:
  postgres_volume:
  prometheus_data:
  grafana_data:

services:
  db:
    image: postgres:14-alpine3.15
    restart: unless-stopped
    environment:
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    ports:
      - "5444:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      - ./configs/postgres/docker-entrypoint-initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql

  postgresql_exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: ${DATA_SOURCE_NAME}

  pgbouncer:
    image: bitnami/pgbouncer:1.17.0
    restart: unless-stopped
    environment:
      - "POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}"
      - "POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}"
      - "POSTGRESQL_USERNAME=${POSTGRES_USER}"
      - "POSTGRESQL_HOST=db"
      - "PGBOUNCER_POOL_MODE=transaction"
      - "PGBOUNCER_IGNORE_STARTUP_PARAMETERS=extra_float_digits"
      - "PGBOUNCER_DATABASE=${POSTGRESQL_DATABASE}"
    ports:
      - "6432:6432"
    depends_on:
      - db

  goose:
    build: ./migrations/
    restart: on-failure
    environment:
      DB_HOST: db
    ports:
      - "5446:5432"
    depends_on:
      - pgbouncer

  prometheus:
    image: prom/prometheus:v2.39.1
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:5.3.4
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
